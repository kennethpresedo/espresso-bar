{"ast":null,"code":"var _jsxFileName = \"/Users/kennethpresedo/Desktop/software_homework/unit_3/espresso/src/pages/DrinksPage/DrinksPage.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DrinksPage(props) {\n  _s();\n  const [drinks, setDrinks] = useState([]);\n  const [foundDrink, setFoundDrink] = useState(null);\n  const [newDrink, setNewDrink] = useState({\n    name: '',\n    readyToDrink: false,\n    color: ''\n  });\n  // index\n  const getDrinks = async () => {\n    try {\n      const response = await fetch('/api/drinks');\n      const data = await response.json();\n      setDrinks(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  // delete\n  const deleteDrink = async id => {\n    try {\n      const response = await fetch(`/api/drinks/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      setFoundDrink(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  // update\n  const updateDrink = async (id, updatedData) => {\n    try {\n      const response = await fetch(`/api/drinks/${id}`, {\n        method: \"PUT\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          ...updatedData\n        })\n      });\n      const data = await response.json();\n      setFoundDrink(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  // create\n  const createDrink = async () => {\n    try {\n      const response = await fetch(`/api/drinks`, {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          ...newDrink\n        })\n      });\n      const data = await response.json();\n      setFoundDrink(data);\n      setNewDrink({\n        name: '',\n        readyToDrink: false,\n        color: ''\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleChange = evt => {\n    setNewDrink({\n      ...newDrink,\n      [evt.target.name]: evt.target.value\n    });\n  };\n  useEffect(() => {\n    getDrinks();\n  }, [foundDrink]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [drinks && drinks.length ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: drinks.map(drink => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [drink.name, \" is \", drink.color, \" \", drink.readyToDrink ? 'and its ready to drink' : 'its not ready to drink', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteDrink(drink._id),\n            children: \"Delete This Drink\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 42\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 33\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 44\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"No Drinks Yet Add One Below\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 25\n    }, this), 'Name ', /*#__PURE__*/_jsxDEV(\"input\", {\n      value: newDrink.name,\n      onChange: handleChange,\n      name: \"name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 95\n    }, this), 'Color ', /*#__PURE__*/_jsxDEV(\"input\", {\n      value: newDrink.color,\n      onChange: handleChange,\n      name: \"color\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 98\n    }, this), 'Ready To Drink ', /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: newDrink.readyToDrink,\n      onChange: evt => setNewDrink({\n        ...newDrink,\n        readyToDrink: evt.target.checked\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 32\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 177\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => createDrink(),\n      children: \"Create A New Drink\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), foundDrink ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: foundDrink.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: foundDrink.color\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: foundDrink.readyToDrink ? 'I am ready' : 'I am not ready'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 29\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"No Drink in Found Drink State\"\n    }, void 0, false)]\n  }, void 0, true);\n}\n_s(DrinksPage, \"z5XNIfSf23rC/EN42zELeGuS3Tw=\");\n_c = DrinksPage;\nvar _c;\n$RefreshReg$(_c, \"DrinksPage\");","map":{"version":3,"names":["useState","useEffect","DrinksPage","props","drinks","setDrinks","foundDrink","setFoundDrink","newDrink","setNewDrink","name","readyToDrink","color","getDrinks","response","fetch","data","json","error","console","deleteDrink","id","method","headers","updateDrink","updatedData","body","JSON","stringify","createDrink","handleChange","evt","target","value","length","map","drink","_id","checked"],"sources":["/Users/kennethpresedo/Desktop/software_homework/unit_3/espresso/src/pages/DrinksPage/DrinksPage.js"],"sourcesContent":["import { useState, useEffect } from 'react'\n\n\nexport default function DrinksPage (props){\n    const [drinks, setDrinks] = useState([])\n    const [foundDrink, setFoundDrink] = useState(null)\n    const [newDrink, setNewDrink] = useState({\n        name: '',\n        readyToDrink: false,\n        color: ''\n    })\n    // index\n    const getDrinks = async () => {\n        try {\n            const response = await fetch('/api/drinks')\n            const data = await response.json()\n            setDrinks(data)\n        } catch (error) {\n            console.error(error)\n        }\n    }\n    // delete\n    const deleteDrink = async (id) => {\n        try {\n            const response = await fetch(`/api/drinks/${id}`, {\n                method: \"DELETE\",\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            })\n            const data = await response.json()\n            setFoundDrink(data)\n        } catch (error) {\n            console.error(error)\n        }\n    }\n    // update\n    const updateDrink = async (id, updatedData) => {\n        try {\n            const response = await fetch(`/api/drinks/${id}`, {\n                method: \"PUT\",\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({...updatedData})\n            })\n            const data = await response.json()\n            setFoundDrink(data)\n        } catch (error) {\n            console.error(error)\n        }\n    }\n    // create\n        const createDrink = async () => {\n            try {\n                const response = await fetch(`/api/drinks`, {\n                    method: \"POST\",\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({...newDrink})\n                })\n                const data = await response.json()\n                setFoundDrink(data)\n                setNewDrink({\n                    name: '',\n                    readyToDrink: false,\n                    color: ''\n                })\n            } catch (error) {\n                console.error(error)\n            }\n        }\n\n    const handleChange = (evt) => {\n        setNewDrink({...newDrink, [evt.target.name]: evt.target.value})\n    }\n\n    useEffect(()=> {\n        getDrinks()\n    }, [foundDrink])\n\n    return (\n        <>\n            {\n                drinks && drinks.length ? (<ul>\n                    {\n                        drinks.map((drink) => {\n                            return (\n                                <li>\n                                    {drink.name} is {drink.color} {drink.readyToDrink? 'and its ready to drink' : 'its not ready to drink'}\n                                    <br/><button onClick={() => deleteDrink(drink._id)}>Delete This Drink</button>\n                                </li>\n                            )\n                        })\n                    }\n                </ul>): <h1>No Drinks Yet Add One Below</h1>\n            }\n            {'Name '}<input value={newDrink.name} onChange={handleChange} name=\"name\"></input><br/>\n            {'Color '}<input value={newDrink.color} onChange={handleChange} name=\"color\"></input><br/>\n            {'Ready To Drink '}<input type=\"checkbox\" checked={newDrink.readyToDrink} onChange={(evt) => setNewDrink({...newDrink, readyToDrink: evt.target.checked })}></input><br/>\n            <button onClick={() => createDrink() }>Create A New Drink</button>\n            {\n                foundDrink? <div>\n                    <h1>{foundDrink.name}</h1>\n                    <h2>{foundDrink.color}</h2>\n                    <h3>{foundDrink.readyToDrink? 'I am ready': 'I am not ready'}</h3>\n                </div>: <>No Drink in Found Drink State</>\n            }\n        </>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}