{"ast":null,"code":"var _jsxFileName = \"/Users/kennethpresedo/Desktop/software_homework/unit_3/espresso/src/components/LoginForm/LoginForm.jsx\",\n  _s = $RefreshSig$();\n// import { useState } from 'react';\n// import * as usersService from '../../utilities/users-service';\n\n// export default function LoginForm({ setUser }) {\n// const [credentials, setCredentials] = useState({\n//   email: '',\n//   password: ''\n// });\n// const [error, setError] = useState('');\n\n// function handleChange(evt) {\n//   setCredentials({ ...credentials, [evt.target.name]: evt.target.value });\n//   setError('');\n// }\n\n// async function handleSubmit(evt) {\n//   // Prevent form from being submitted to the server\n//   evt.preventDefault();\n//   try {\n//     // The promise returned by the signUp service method\n//     // will resolve to the user object included in the\n//     // payload of the JSON Web Token (JWT)\n//     const user = await usersService.login(credentials);\n//     setUser(user);\n//   } catch {\n//     setError('Log In Failed - Try Again');\n//   }\n// }\n\n// return (\n//   <div>\n//     <div className=\"form-container\">\n//       <form autoComplete=\"off\" onSubmit={handleSubmit}>\n//         <label>Email</label>\n//         <input type=\"text\" name=\"email\" value={credentials.email} onChange={handleChange} required />\n//         <label>Password</label>\n//         <input type=\"password\" name=\"password\" value={credentials.password} onChange={handleChange} required />\n//         <button type=\"submit\">LOG IN</button>\n//       </form>\n//     </div>\n//     <p className=\"error-message\">&nbsp;{error}</p>\n//   </div>\n// );\n// }\n\nimport { useState } from 'react';\nimport * as userService from '../../utilities/users-service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginForm(_ref) {\n  _s();\n  let {\n    setUser\n  } = _ref;\n  const [credentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const [error, setError] = useState('');\n  const handleChange = evt => {\n    setCredentials({\n      ...credentials,\n      [evt.target.name]: evt.target.value\n    });\n    setError('');\n  };\n  const handleSubmit = async evt => {\n    evt.preventDefault();\n    try {\n      const user = await userService.login(credentials);\n      setUser(user);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        autoComplete: \"off\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: credentials.email,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: credentials.password,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"LOG IN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"error-message\",\n      children: [\"\\xA0\", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginForm, \"nqlxS0SLBjlRK/z+Tmr3NYYKwsc=\");\n_c = LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["useState","userService","LoginForm","setUser","credentials","setCredentials","email","password","error","setError","handleChange","evt","target","name","value","handleSubmit","preventDefault","user","login","message"],"sources":["/Users/kennethpresedo/Desktop/software_homework/unit_3/espresso/src/components/LoginForm/LoginForm.jsx"],"sourcesContent":["// import { useState } from 'react';\n// import * as usersService from '../../utilities/users-service';\n\n// export default function LoginForm({ setUser }) {\n// const [credentials, setCredentials] = useState({\n//   email: '',\n//   password: ''\n// });\n// const [error, setError] = useState('');\n\n// function handleChange(evt) {\n//   setCredentials({ ...credentials, [evt.target.name]: evt.target.value });\n//   setError('');\n// }\n\n// async function handleSubmit(evt) {\n//   // Prevent form from being submitted to the server\n//   evt.preventDefault();\n//   try {\n//     // The promise returned by the signUp service method\n//     // will resolve to the user object included in the\n//     // payload of the JSON Web Token (JWT)\n//     const user = await usersService.login(credentials);\n//     setUser(user);\n//   } catch {\n//     setError('Log In Failed - Try Again');\n//   }\n// }\n\n// return (\n//   <div>\n//     <div className=\"form-container\">\n//       <form autoComplete=\"off\" onSubmit={handleSubmit}>\n//         <label>Email</label>\n//         <input type=\"text\" name=\"email\" value={credentials.email} onChange={handleChange} required />\n//         <label>Password</label>\n//         <input type=\"password\" name=\"password\" value={credentials.password} onChange={handleChange} required />\n//         <button type=\"submit\">LOG IN</button>\n//       </form>\n//     </div>\n//     <p className=\"error-message\">&nbsp;{error}</p>\n//   </div>\n// );\n// }\n\nimport { useState } from 'react'\nimport * as userService from '../../utilities/users-service'\n\nexport default function LoginForm ({ setUser }) {\n  const [credentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  })\n  const [error, setError] = useState('')\n\n  const handleChange = (evt) => {\n    setCredentials({ ...credentials, [evt.target.name]: evt.target.value })\n    setError('')\n  }\n\n  const handleSubmit = async (evt) => {\n    evt.preventDefault()\n    try {\n      const user = await userService.login(credentials)\n      setUser(user)\n    } catch (error) {\n      setError(error.message)\n    }\n  }\n\n  return (\n    <div>\n      <div className='form-container'>\n        <form autoComplete='off' onSubmit={handleSubmit}>\n          <label>Email</label>\n          <input type='email' name='email' value={credentials.email} onChange={handleChange} required />\n          <label>Password</label>\n          <input type='password' name='password' value={credentials.password} onChange={handleChange} required />\n          <button type='submit'>LOG IN</button>\n        </form>\n      </div>\n      <h1 className='error-message'>&nbsp;{error}</h1>\n    </div>\n  )\n}"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,KAAKC,WAAW,MAAM,+BAA+B;AAAA;AAE5D,eAAe,SAASC,SAAS,OAAe;EAAA;EAAA,IAAb;IAAEC;EAAQ,CAAC;EAC5C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGL,QAAQ,CAAC;IAC7CM,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACZ,CAAC,CAAC;EACF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMU,YAAY,GAAIC,GAAG,IAAK;IAC5BN,cAAc,CAAC;MAAE,GAAGD,WAAW;MAAE,CAACO,GAAG,CAACC,MAAM,CAACC,IAAI,GAAGF,GAAG,CAACC,MAAM,CAACE;IAAM,CAAC,CAAC;IACvEL,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,MAAMM,YAAY,GAAG,MAAOJ,GAAG,IAAK;IAClCA,GAAG,CAACK,cAAc,EAAE;IACpB,IAAI;MACF,MAAMC,IAAI,GAAG,MAAMhB,WAAW,CAACiB,KAAK,CAACd,WAAW,CAAC;MACjDD,OAAO,CAACc,IAAI,CAAC;IACf,CAAC,CAAC,OAAOT,KAAK,EAAE;MACdC,QAAQ,CAACD,KAAK,CAACW,OAAO,CAAC;IACzB;EACF,CAAC;EAED,oBACE;IAAA,wBACE;MAAK,SAAS,EAAC,gBAAgB;MAAA,uBAC7B;QAAM,YAAY,EAAC,KAAK;QAAC,QAAQ,EAAEJ,YAAa;QAAA,wBAC9C;UAAA,UAAO;QAAK;UAAA;UAAA;UAAA;QAAA,QAAQ,eACpB;UAAO,IAAI,EAAC,OAAO;UAAC,IAAI,EAAC,OAAO;UAAC,KAAK,EAAEX,WAAW,CAACE,KAAM;UAAC,QAAQ,EAAEI,YAAa;UAAC,QAAQ;QAAA;UAAA;UAAA;UAAA;QAAA,QAAG,eAC9F;UAAA,UAAO;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAQ,eACvB;UAAO,IAAI,EAAC,UAAU;UAAC,IAAI,EAAC,UAAU;UAAC,KAAK,EAAEN,WAAW,CAACG,QAAS;UAAC,QAAQ,EAAEG,YAAa;UAAC,QAAQ;QAAA;UAAA;UAAA;UAAA;QAAA,QAAG,eACvG;UAAQ,IAAI,EAAC,QAAQ;UAAA,UAAC;QAAM;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA;IAChC;MAAA;MAAA;MAAA;IAAA,QACH,eACN;MAAI,SAAS,EAAC,eAAe;MAAA,WAAC,MAAM,EAACF,KAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM;EAAA;IAAA;IAAA;IAAA;EAAA,QAC5C;AAEV;AAAC,GApCuBN,SAAS;AAAA,KAATA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}